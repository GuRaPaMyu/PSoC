ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_SpiUartWriteTxData,"ax",%progbits
  18              		.align	2
  19              		.global	UART_SpiUartWriteTxData
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_SpiUartWriteTxData, %function
  23              	UART_SpiUartWriteTxData:
  24              	.LFB0:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\UART_SPI_UART.c"
   1:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * File Name: UART_SPI_UART.c
   3:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Version 3.0
   4:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   5:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Description:
   6:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  SPI and UART modes.
   8:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
   9:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Note:
  10:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
  11:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************
  12:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  18:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_PVT.h"
  19:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_SPI_UART_PVT.h"
  20:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  21:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************
  22:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *        SPI/UART Private Vars
  23:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ***************************************/
  24:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  25:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
  26:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferHead;
  27:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferTail;
  28:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8  UART_rxBufferOverflow;
  29:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  30:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  31:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
  32:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferHead;
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 2


  33:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferTail;
  34:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
  35:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  36:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER)
  37:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  38:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_rxBufferInternal[UART_INTERNAL_RX_BUFFER_SIZE];
  39:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER) */
  40:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  41:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER)
  42:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_txBufferInternal[UART_TX_BUFFER_SIZE];
  43:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER) */
  44:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  45:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  46:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_RX_DIRECTION)
  47:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
  48:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartReadRxData
  49:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
  50:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  51:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
  52:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  53:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  54:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  55:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  56:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  57:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     is empty.
  58:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  59:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
  60:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
  61:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  62:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
  63:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Next data element from the receive buffer.
  64:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  65:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Global Variables:
  66:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Look into UART_SpiInit for description.
  67:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  68:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
  69:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartReadRxData(void)
  70:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  71:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 rxData = 0u;
  72:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  73:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
  74:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
  75:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  76:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  77:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
  78:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  79:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_rxBufferHead != UART_rxBufferTail)
  80:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
  81:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  82:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  83:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Calculate index to read from */
  84:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locTail = (UART_rxBufferTail + 1u);
  85:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  86:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_INTERNAL_RX_BUFFER_SIZE == locTail)
  87:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
  88:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locTail = 0u;
  89:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 3


  90:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  91:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Get data from RX software buffer */
  92:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 rxData = UART_GetWordFromRxBuffer(locTail);
  93:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  94:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Change index in the buffer */
  95:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_rxBufferTail = locTail;
  96:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
  97:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
  98:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
  99:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 100:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     if (0u == (UART_INTR_RX_MASK_REG & UART_INTR_RX_NOT_EMPTY))
 101:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     {
 102:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 103:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         * receiving data into software buffer.
 104:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         */
 105:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                         UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 106:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     }
 107:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 108:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 #endif
 109:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 110:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 111:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 112:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 113:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 114:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Read data from RX FIFO */
 115:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 116:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 117:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 118:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 119:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (rxData);
 120:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 121:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 122:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 123:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 124:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetRxBufferSize
 125:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 126:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 127:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 128:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 129:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 130:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO.
 131:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 132:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 133:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 134:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 135:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 136:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 137:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 138:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of received data elements
 139:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 140:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 141:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetRxBufferSize(void)
 142:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 143:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 144:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
 145:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 146:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 4


 147:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 148:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 149:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 150:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locHead = UART_rxBufferHead;
 151:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 152:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if(locHead >= UART_rxBufferTail)
 153:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 154:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead - UART_rxBufferTail);
 155:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 156:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 157:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 158:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead + (UART_INTERNAL_RX_BUFFER_SIZE - UART_rxBufferTail));
 159:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 160:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 161:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 162:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 163:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_RX_FIFO_ENTRIES;
 164:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 165:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 166:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 167:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 168:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 169:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 170:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 171:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 172:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearRxBuffer
 173:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 174:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 175:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 176:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 177:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 178:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 179:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 180:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 181:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 182:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 183:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 184:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 185:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearRxBuffer(void)
 186:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 187:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 188:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 189:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 190:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 191:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 192:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush RX software buffer */
 193:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferHead = UART_rxBufferTail;
 194:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferOverflow = 0u;
 195:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 196:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 197:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ALL);
 198:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 199:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 200:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 201:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 202:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 * data into software buffer.
 203:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 */
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 5


 204:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 205:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 206:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             #endif
 207:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 208:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 209:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 210:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 211:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 212:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 213:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 214:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 215:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 216:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 217:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 218:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_RX_DIRECTION) */
 219:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 220:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 221:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_TX_DIRECTION)
 222:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 223:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartWriteTxData
 224:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 225:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 226:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 227:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 228:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  bus time.
 229:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 230:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 231:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 232:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 233:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  txDataByte: the data to be transmitted.
 234:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 235:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 236:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 237:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 238:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 239:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartWriteTxData(uint32 txData)
 240:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  26              		.loc 1 240 0
  27              		.cfi_startproc
  28              	.LVL0:
 241:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 242:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 243:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 244:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 245:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 246:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 247:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 248:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if ((UART_txBufferHead == UART_txBufferTail) &&
 249:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 250:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 251:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 252:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_TX_FIFO_WR_REG = txData;
 253:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 254:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data into TX software buffer */
 255:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 256:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 257:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Head index to put data */
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 6


 258:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 locHead = (UART_txBufferHead + 1u);
 259:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 260:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Adjust TX software buffer index */
 261:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_TX_BUFFER_SIZE == locHead)
 262:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 263:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     locHead = 0u;
 264:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 265:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 266:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 267:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 while (locHead == UART_txBufferTail)
 268:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 269:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 270:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 271:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer has at least one room */
 272:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 273:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 274:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_ClearTxInterruptSource(UART_INTR_TX_NOT_FULL);
 275:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 276:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_PutWordInTxBuffer(locHead, txData);
 277:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_txBufferHead = locHead;
 279:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 280:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 281:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (0u == (UART_INTR_TX_MASK_REG & UART_INTR_TX_NOT_FULL))
 282:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 283:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 284:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                     UART_INTR_TX_MASK_REG |= (uint32) UART_INTR_TX_NOT_FULL;
 285:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 286:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 287:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 288:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 289:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 290:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 291:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             while (UART_SPI_UART_FIFO_SIZE == UART_GET_TX_FIFO_ENTRIES)
  29              		.loc 1 291 0
  30 0000 0449     		ldr	r1, .L4
  31 0002 0F22     		mov	r2, #15
  32              	.L2:
  33              		.loc 1 291 0 is_stmt 0 discriminator 1
  34 0004 0B68     		ldr	r3, [r1]
  35 0006 1340     		and	r3, r2
  36 0008 082B     		cmp	r3, #8
  37 000a FBD0     		beq	.L2
 292:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 293:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 294:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 295:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_TX_FIFO_WR_REG = txData;
  38              		.loc 1 295 0 is_stmt 1
  39 000c 024B     		ldr	r3, .L4+4
  40 000e 1860     		str	r0, [r3]
 296:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 297:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 298:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  41              		.loc 1 298 0
  42              		@ sp needed
  43 0010 7047     		bx	lr
  44              	.L5:
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 7


  45 0012 C046     		.align	2
  46              	.L4:
  47 0014 08020640 		.word	1074135560
  48 0018 40020640 		.word	1074135616
  49              		.cfi_endproc
  50              	.LFE0:
  51              		.size	UART_SpiUartWriteTxData, .-UART_SpiUartWriteTxData
  52              		.section	.text.UART_SpiUartPutArray,"ax",%progbits
  53              		.align	2
  54              		.global	UART_SpiUartPutArray
  55              		.code	16
  56              		.thumb_func
  57              		.type	UART_SpiUartPutArray, %function
  58              	UART_SpiUartPutArray:
  59              	.LFB1:
 299:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 300:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 301:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 302:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartPutArray
 303:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 304:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 305:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 306:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 307:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 308:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 309:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  than transmit buffer size.
 310:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 311:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 312:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  wrBuf:  pointer to an array with data to be placed in transmit buffer.
 313:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  count:  number of data elements to be placed in the transmit buffer.
 314:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 315:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 316:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 317:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 318:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 319:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 320:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  60              		.loc 1 320 0
  61              		.cfi_startproc
  62              	.LVL1:
  63 0000 70B5     		push	{r4, r5, r6, lr}
  64              		.cfi_def_cfa_offset 16
  65              		.cfi_offset 4, -16
  66              		.cfi_offset 5, -12
  67              		.cfi_offset 6, -8
  68              		.cfi_offset 14, -4
  69 0002 061C     		mov	r6, r0
  70 0004 0D1C     		mov	r5, r1
  71              	.LVL2:
 321:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 i;
 322:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
  72              		.loc 1 323 0
  73 0006 0024     		mov	r4, #0
  74 0008 03E0     		b	.L7
  75              	.LVL3:
  76              	.L8:
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 8


 324:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 325:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_SpiUartWriteTxData((uint32) wrBuf[i]);
  77              		.loc 1 325 0 discriminator 2
  78 000a 305D     		ldrb	r0, [r6, r4]
  79 000c FFF7FEFF 		bl	UART_SpiUartWriteTxData
  80              	.LVL4:
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
  81              		.loc 1 323 0 discriminator 2
  82 0010 0134     		add	r4, r4, #1
  83              	.LVL5:
  84              	.L7:
 323:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
  85              		.loc 1 323 0 is_stmt 0 discriminator 1
  86 0012 AC42     		cmp	r4, r5
  87 0014 F9D3     		bcc	.L8
 326:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 327:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  88              		.loc 1 327 0 is_stmt 1
  89              		@ sp needed
  90              	.LVL6:
  91              	.LVL7:
  92              	.LVL8:
  93 0016 70BD     		pop	{r4, r5, r6, pc}
  94              		.cfi_endproc
  95              	.LFE1:
  96              		.size	UART_SpiUartPutArray, .-UART_SpiUartPutArray
  97              		.section	.text.UART_SpiUartGetTxBufferSize,"ax",%progbits
  98              		.align	2
  99              		.global	UART_SpiUartGetTxBufferSize
 100              		.code	16
 101              		.thumb_func
 102              		.type	UART_SpiUartGetTxBufferSize, %function
 103              	UART_SpiUartGetTxBufferSize:
 104              	.LFB2:
 328:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 329:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 330:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 331:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetTxBufferSize
 332:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 333:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 334:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 335:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Returns the number of elements currently in the transmit buffer.
 336:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  - TX software buffer is disabled: returns the number of used entries in
 337:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    TX FIFO.
 338:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  - TX software buffer is enabled: returns the number of elements currently
 339:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    used in the transmit buffer. This number does not include used entries in
 340:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 341:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *    not full.
 342:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 343:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 344:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 345:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 346:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 347:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 348:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 349:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 350:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetTxBufferSize(void)
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 9


 351:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 105              		.loc 1 351 0
 106              		.cfi_startproc
 352:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 353:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 354:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
 355:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 356:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 357:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 358:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 359:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Get current Tail index */
 360:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             locTail = UART_txBufferTail;
 361:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 362:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_txBufferHead >= locTail)
 363:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 364:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead - locTail);
 365:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 366:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 367:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 368:.\Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead + (UART_TX_BUFFER_SIZE - locTail));
 369:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 370:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 371:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 372:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 373:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_TX_FIFO_ENTRIES;
 107              		.loc 1 373 0
 108 0000 024B     		ldr	r3, .L10
 109 0002 1B68     		ldr	r3, [r3]
 110 0004 0F20     		mov	r0, #15
 111 0006 1840     		and	r0, r3
 112              	.LVL9:
 374:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 375:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 376:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 377:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 378:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 113              		.loc 1 378 0
 114              		@ sp needed
 115 0008 7047     		bx	lr
 116              	.L11:
 117 000a C046     		.align	2
 118              	.L10:
 119 000c 08020640 		.word	1074135560
 120              		.cfi_endproc
 121              	.LFE2:
 122              		.size	UART_SpiUartGetTxBufferSize, .-UART_SpiUartGetTxBufferSize
 123              		.section	.text.UART_SpiUartClearTxBuffer,"ax",%progbits
 124              		.align	2
 125              		.global	UART_SpiUartClearTxBuffer
 126              		.code	16
 127              		.thumb_func
 128              		.type	UART_SpiUartClearTxBuffer, %function
 129              	UART_SpiUartClearTxBuffer:
 130              	.LFB3:
 379:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 380:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 381:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 10


 382:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearTxBuffer
 383:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     ********************************************************************************
 384:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 385:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Summary:
 386:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 387:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 388:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Parameters:
 389:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 390:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 391:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     * Return:
 392:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *  None
 393:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 394:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 395:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearTxBuffer(void)
 396:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 131              		.loc 1 396 0
 132              		.cfi_startproc
 397:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 398:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 399:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 400:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 401:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 402:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush TX software buffer */
 403:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_txBufferHead = UART_txBufferTail;
 404:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 405:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_INTR_TX_MASK_REG &= (uint32) ~UART_INTR_TX_NOT_FULL;
 406:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 407:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 408:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 409:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 410:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 411:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 412:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 413:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 414:.\Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 133              		.loc 1 414 0
 134 0000 054B     		ldr	r3, .L13
 135 0002 1968     		ldr	r1, [r3]
 136 0004 8022     		mov	r2, #128
 137 0006 5202     		lsl	r2, r2, #9
 138 0008 0A43     		orr	r2, r1
 139 000a 1A60     		str	r2, [r3]
 140 000c 1968     		ldr	r1, [r3]
 141 000e 034A     		ldr	r2, .L13+4
 142 0010 0A40     		and	r2, r1
 143 0012 1A60     		str	r2, [r3]
 415:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 416:.\Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 417:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 144              		.loc 1 417 0
 145              		@ sp needed
 146 0014 7047     		bx	lr
 147              	.L14:
 148 0016 C046     		.align	2
 149              	.L13:
 150 0018 04020640 		.word	1074135556
 151 001c FFFFFEFF 		.word	-65537
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 11


 152              		.cfi_endproc
 153              	.LFE3:
 154              		.size	UART_SpiUartClearTxBuffer, .-UART_SpiUartClearTxBuffer
 155              		.section	.text.UART_SpiUartDisableIntRx,"ax",%progbits
 156              		.align	2
 157              		.global	UART_SpiUartDisableIntRx
 158              		.code	16
 159              		.thumb_func
 160              		.type	UART_SpiUartDisableIntRx, %function
 161              	UART_SpiUartDisableIntRx:
 162              	.LFB4:
 418:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 419:.\Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_TX_DIRECTION) */
 420:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 421:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 422:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 423:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntRx
 424:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ********************************************************************************
 425:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 426:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Summary:
 427:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 428:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 429:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Parameters:
 430:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  None
 431:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 432:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Return:
 433:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Returns the RX interrupt sources enabled before the function call.
 434:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 435:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 436:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntRx(void)
 437:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 163              		.loc 1 437 0
 164              		.cfi_startproc
 438:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSource;
 439:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 440:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSource = UART_GetRxInterruptMode();
 165              		.loc 1 440 0
 166 0000 024B     		ldr	r3, .L16
 167 0002 1868     		ldr	r0, [r3]
 168              	.LVL10:
 441:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 442:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetRxInterruptMode(UART_NO_INTR_SOURCES);
 169              		.loc 1 442 0
 170 0004 0022     		mov	r2, #0
 171 0006 1A60     		str	r2, [r3]
 443:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 444:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSource);
 445:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 172              		.loc 1 445 0
 173              		@ sp needed
 174 0008 7047     		bx	lr
 175              	.L17:
 176 000a C046     		.align	2
 177              	.L16:
 178 000c C80F0640 		.word	1074139080
 179              		.cfi_endproc
 180              	.LFE4:
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 12


 181              		.size	UART_SpiUartDisableIntRx, .-UART_SpiUartDisableIntRx
 182              		.section	.text.UART_SpiUartDisableIntTx,"ax",%progbits
 183              		.align	2
 184              		.global	UART_SpiUartDisableIntTx
 185              		.code	16
 186              		.thumb_func
 187              		.type	UART_SpiUartDisableIntTx, %function
 188              	UART_SpiUartDisableIntTx:
 189              	.LFB5:
 446:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 447:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 448:.\Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 449:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntTx
 450:.\Generated_Source\PSoC4/UART_SPI_UART.c **** ********************************************************************************
 451:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 452:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Summary:
 453:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables TX interrupt sources.
 454:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 455:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Parameters:
 456:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  None
 457:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 458:.\Generated_Source\PSoC4/UART_SPI_UART.c **** * Return:
 459:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *  Returns TX interrupt sources enabled before function call.
 460:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *
 461:.\Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 462:.\Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntTx(void)
 463:.\Generated_Source\PSoC4/UART_SPI_UART.c **** {
 190              		.loc 1 463 0
 191              		.cfi_startproc
 464:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSourceMask;
 465:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 466:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     intSourceMask = UART_GetTxInterruptMode();
 192              		.loc 1 466 0
 193 0000 024B     		ldr	r3, .L19
 194 0002 1868     		ldr	r0, [r3]
 195              	.LVL11:
 467:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 468:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 196              		.loc 1 468 0
 197 0004 0022     		mov	r2, #0
 198 0006 1A60     		str	r2, [r3]
 469:.\Generated_Source\PSoC4/UART_SPI_UART.c **** 
 470:.\Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSourceMask);
 471:.\Generated_Source\PSoC4/UART_SPI_UART.c **** }
 199              		.loc 1 471 0
 200              		@ sp needed
 201 0008 7047     		bx	lr
 202              	.L20:
 203 000a C046     		.align	2
 204              	.L19:
 205 000c 880F0640 		.word	1074139016
 206              		.cfi_endproc
 207              	.LFE5:
 208              		.size	UART_SpiUartDisableIntTx, .-UART_SpiUartDisableIntTx
 209              		.text
 210              	.Letext0:
 211              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 13


 212              		.section	.debug_info,"",%progbits
 213              	.Ldebug_info0:
 214 0000 B0010000 		.4byte	0x1b0
 215 0004 0400     		.2byte	0x4
 216 0006 00000000 		.4byte	.Ldebug_abbrev0
 217 000a 04       		.byte	0x4
 218 000b 01       		.uleb128 0x1
 219 000c 08010000 		.4byte	.LASF27
 220 0010 01       		.byte	0x1
 221 0011 F7010000 		.4byte	.LASF28
 222 0015 D9010000 		.4byte	.LASF29
 223 0019 00000000 		.4byte	.Ldebug_ranges0+0
 224 001d 00000000 		.4byte	0
 225 0021 00000000 		.4byte	.Ldebug_line0
 226 0025 02       		.uleb128 0x2
 227 0026 01       		.byte	0x1
 228 0027 06       		.byte	0x6
 229 0028 2E020000 		.4byte	.LASF0
 230 002c 02       		.uleb128 0x2
 231 002d 01       		.byte	0x1
 232 002e 08       		.byte	0x8
 233 002f 8E000000 		.4byte	.LASF1
 234 0033 02       		.uleb128 0x2
 235 0034 02       		.byte	0x2
 236 0035 05       		.byte	0x5
 237 0036 CF010000 		.4byte	.LASF2
 238 003a 02       		.uleb128 0x2
 239 003b 02       		.byte	0x2
 240 003c 07       		.byte	0x7
 241 003d 13000000 		.4byte	.LASF3
 242 0041 02       		.uleb128 0x2
 243 0042 04       		.byte	0x4
 244 0043 05       		.byte	0x5
 245 0044 20020000 		.4byte	.LASF4
 246 0048 02       		.uleb128 0x2
 247 0049 04       		.byte	0x4
 248 004a 07       		.byte	0x7
 249 004b 70000000 		.4byte	.LASF5
 250 004f 02       		.uleb128 0x2
 251 0050 08       		.byte	0x8
 252 0051 05       		.byte	0x5
 253 0052 8D010000 		.4byte	.LASF6
 254 0056 02       		.uleb128 0x2
 255 0057 08       		.byte	0x8
 256 0058 07       		.byte	0x7
 257 0059 F1000000 		.4byte	.LASF7
 258 005d 03       		.uleb128 0x3
 259 005e 04       		.byte	0x4
 260 005f 05       		.byte	0x5
 261 0060 696E7400 		.ascii	"int\000"
 262 0064 02       		.uleb128 0x2
 263 0065 04       		.byte	0x4
 264 0066 07       		.byte	0x7
 265 0067 26000000 		.4byte	.LASF8
 266 006b 04       		.uleb128 0x4
 267 006c 82000000 		.4byte	.LASF9
 268 0070 02       		.byte	0x2
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 14


 269 0071 C1       		.byte	0xc1
 270 0072 2C000000 		.4byte	0x2c
 271 0076 04       		.uleb128 0x4
 272 0077 A3000000 		.4byte	.LASF10
 273 007b 02       		.byte	0x2
 274 007c C3       		.byte	0xc3
 275 007d 48000000 		.4byte	0x48
 276 0081 02       		.uleb128 0x2
 277 0082 04       		.byte	0x4
 278 0083 04       		.byte	0x4
 279 0084 4C000000 		.4byte	.LASF11
 280 0088 02       		.uleb128 0x2
 281 0089 08       		.byte	0x8
 282 008a 04       		.byte	0x4
 283 008b 9C000000 		.4byte	.LASF12
 284 008f 02       		.uleb128 0x2
 285 0090 01       		.byte	0x1
 286 0091 08       		.byte	0x8
 287 0092 29020000 		.4byte	.LASF13
 288 0096 05       		.uleb128 0x5
 289 0097 00000000 		.4byte	.LASF14
 290 009b 02       		.byte	0x2
 291 009c 6D01     		.2byte	0x16d
 292 009e A2000000 		.4byte	0xa2
 293 00a2 06       		.uleb128 0x6
 294 00a3 76000000 		.4byte	0x76
 295 00a7 02       		.uleb128 0x2
 296 00a8 04       		.byte	0x4
 297 00a9 07       		.byte	0x7
 298 00aa 84010000 		.4byte	.LASF15
 299 00ae 07       		.uleb128 0x7
 300 00af 9B010000 		.4byte	.LASF16
 301 00b3 01       		.byte	0x1
 302 00b4 EF       		.byte	0xef
 303 00b5 00000000 		.4byte	.LFB0
 304 00b9 1C000000 		.4byte	.LFE0-.LFB0
 305 00bd 01       		.uleb128 0x1
 306 00be 9C       		.byte	0x9c
 307 00bf D1000000 		.4byte	0xd1
 308 00c3 08       		.uleb128 0x8
 309 00c4 0C000000 		.4byte	.LASF18
 310 00c8 01       		.byte	0x1
 311 00c9 EF       		.byte	0xef
 312 00ca 76000000 		.4byte	0x76
 313 00ce 01       		.uleb128 0x1
 314 00cf 50       		.byte	0x50
 315 00d0 00       		.byte	0
 316 00d1 09       		.uleb128 0x9
 317 00d2 C4000000 		.4byte	.LASF17
 318 00d6 01       		.byte	0x1
 319 00d7 3F01     		.2byte	0x13f
 320 00d9 00000000 		.4byte	.LFB1
 321 00dd 18000000 		.4byte	.LFE1-.LFB1
 322 00e1 01       		.uleb128 0x1
 323 00e2 9C       		.byte	0x9c
 324 00e3 1F010000 		.4byte	0x11f
 325 00e7 0A       		.uleb128 0xa
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 15


 326 00e8 88000000 		.4byte	.LASF19
 327 00ec 01       		.byte	0x1
 328 00ed 3F01     		.2byte	0x13f
 329 00ef 1F010000 		.4byte	0x11f
 330 00f3 00000000 		.4byte	.LLST0
 331 00f7 0A       		.uleb128 0xa
 332 00f8 06000000 		.4byte	.LASF20
 333 00fc 01       		.byte	0x1
 334 00fd 3F01     		.2byte	0x13f
 335 00ff 76000000 		.4byte	0x76
 336 0103 2C000000 		.4byte	.LLST1
 337 0107 0B       		.uleb128 0xb
 338 0108 6900     		.ascii	"i\000"
 339 010a 01       		.byte	0x1
 340 010b 4101     		.2byte	0x141
 341 010d 76000000 		.4byte	0x76
 342 0111 58000000 		.4byte	.LLST2
 343 0115 0C       		.uleb128 0xc
 344 0116 10000000 		.4byte	.LVL4
 345 011a AE000000 		.4byte	0xae
 346 011e 00       		.byte	0
 347 011f 0D       		.uleb128 0xd
 348 0120 04       		.byte	0x4
 349 0121 25010000 		.4byte	0x125
 350 0125 0E       		.uleb128 0xe
 351 0126 6B000000 		.4byte	0x6b
 352 012a 0F       		.uleb128 0xf
 353 012b B3010000 		.4byte	.LASF22
 354 012f 01       		.byte	0x1
 355 0130 5E01     		.2byte	0x15e
 356 0132 76000000 		.4byte	0x76
 357 0136 00000000 		.4byte	.LFB2
 358 013a 10000000 		.4byte	.LFE2-.LFB2
 359 013e 01       		.uleb128 0x1
 360 013f 9C       		.byte	0x9c
 361 0140 53010000 		.4byte	0x153
 362 0144 10       		.uleb128 0x10
 363 0145 6B000000 		.4byte	.LASF21
 364 0149 01       		.byte	0x1
 365 014a 6001     		.2byte	0x160
 366 014c 76000000 		.4byte	0x76
 367 0150 01       		.uleb128 0x1
 368 0151 50       		.byte	0x50
 369 0152 00       		.byte	0
 370 0153 11       		.uleb128 0x11
 371 0154 AA000000 		.4byte	.LASF30
 372 0158 01       		.byte	0x1
 373 0159 8B01     		.2byte	0x18b
 374 015b 00000000 		.4byte	.LFB3
 375 015f 20000000 		.4byte	.LFE3-.LFB3
 376 0163 01       		.uleb128 0x1
 377 0164 9C       		.byte	0x9c
 378 0165 0F       		.uleb128 0xf
 379 0166 33000000 		.4byte	.LASF23
 380 016a 01       		.byte	0x1
 381 016b B401     		.2byte	0x1b4
 382 016d 76000000 		.4byte	0x76
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 16


 383 0171 00000000 		.4byte	.LFB4
 384 0175 10000000 		.4byte	.LFE4-.LFB4
 385 0179 01       		.uleb128 0x1
 386 017a 9C       		.byte	0x9c
 387 017b 8E010000 		.4byte	0x18e
 388 017f 10       		.uleb128 0x10
 389 0180 E7000000 		.4byte	.LASF24
 390 0184 01       		.byte	0x1
 391 0185 B601     		.2byte	0x1b6
 392 0187 76000000 		.4byte	0x76
 393 018b 01       		.uleb128 0x1
 394 018c 50       		.byte	0x50
 395 018d 00       		.byte	0
 396 018e 12       		.uleb128 0x12
 397 018f 52000000 		.4byte	.LASF25
 398 0193 01       		.byte	0x1
 399 0194 CE01     		.2byte	0x1ce
 400 0196 76000000 		.4byte	0x76
 401 019a 00000000 		.4byte	.LFB5
 402 019e 10000000 		.4byte	.LFE5-.LFB5
 403 01a2 01       		.uleb128 0x1
 404 01a3 9C       		.byte	0x9c
 405 01a4 10       		.uleb128 0x10
 406 01a5 D9000000 		.4byte	.LASF26
 407 01a9 01       		.byte	0x1
 408 01aa D001     		.2byte	0x1d0
 409 01ac 76000000 		.4byte	0x76
 410 01b0 01       		.uleb128 0x1
 411 01b1 50       		.byte	0x50
 412 01b2 00       		.byte	0
 413 01b3 00       		.byte	0
 414              		.section	.debug_abbrev,"",%progbits
 415              	.Ldebug_abbrev0:
 416 0000 01       		.uleb128 0x1
 417 0001 11       		.uleb128 0x11
 418 0002 01       		.byte	0x1
 419 0003 25       		.uleb128 0x25
 420 0004 0E       		.uleb128 0xe
 421 0005 13       		.uleb128 0x13
 422 0006 0B       		.uleb128 0xb
 423 0007 03       		.uleb128 0x3
 424 0008 0E       		.uleb128 0xe
 425 0009 1B       		.uleb128 0x1b
 426 000a 0E       		.uleb128 0xe
 427 000b 55       		.uleb128 0x55
 428 000c 17       		.uleb128 0x17
 429 000d 11       		.uleb128 0x11
 430 000e 01       		.uleb128 0x1
 431 000f 10       		.uleb128 0x10
 432 0010 17       		.uleb128 0x17
 433 0011 00       		.byte	0
 434 0012 00       		.byte	0
 435 0013 02       		.uleb128 0x2
 436 0014 24       		.uleb128 0x24
 437 0015 00       		.byte	0
 438 0016 0B       		.uleb128 0xb
 439 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 17


 440 0018 3E       		.uleb128 0x3e
 441 0019 0B       		.uleb128 0xb
 442 001a 03       		.uleb128 0x3
 443 001b 0E       		.uleb128 0xe
 444 001c 00       		.byte	0
 445 001d 00       		.byte	0
 446 001e 03       		.uleb128 0x3
 447 001f 24       		.uleb128 0x24
 448 0020 00       		.byte	0
 449 0021 0B       		.uleb128 0xb
 450 0022 0B       		.uleb128 0xb
 451 0023 3E       		.uleb128 0x3e
 452 0024 0B       		.uleb128 0xb
 453 0025 03       		.uleb128 0x3
 454 0026 08       		.uleb128 0x8
 455 0027 00       		.byte	0
 456 0028 00       		.byte	0
 457 0029 04       		.uleb128 0x4
 458 002a 16       		.uleb128 0x16
 459 002b 00       		.byte	0
 460 002c 03       		.uleb128 0x3
 461 002d 0E       		.uleb128 0xe
 462 002e 3A       		.uleb128 0x3a
 463 002f 0B       		.uleb128 0xb
 464 0030 3B       		.uleb128 0x3b
 465 0031 0B       		.uleb128 0xb
 466 0032 49       		.uleb128 0x49
 467 0033 13       		.uleb128 0x13
 468 0034 00       		.byte	0
 469 0035 00       		.byte	0
 470 0036 05       		.uleb128 0x5
 471 0037 16       		.uleb128 0x16
 472 0038 00       		.byte	0
 473 0039 03       		.uleb128 0x3
 474 003a 0E       		.uleb128 0xe
 475 003b 3A       		.uleb128 0x3a
 476 003c 0B       		.uleb128 0xb
 477 003d 3B       		.uleb128 0x3b
 478 003e 05       		.uleb128 0x5
 479 003f 49       		.uleb128 0x49
 480 0040 13       		.uleb128 0x13
 481 0041 00       		.byte	0
 482 0042 00       		.byte	0
 483 0043 06       		.uleb128 0x6
 484 0044 35       		.uleb128 0x35
 485 0045 00       		.byte	0
 486 0046 49       		.uleb128 0x49
 487 0047 13       		.uleb128 0x13
 488 0048 00       		.byte	0
 489 0049 00       		.byte	0
 490 004a 07       		.uleb128 0x7
 491 004b 2E       		.uleb128 0x2e
 492 004c 01       		.byte	0x1
 493 004d 3F       		.uleb128 0x3f
 494 004e 19       		.uleb128 0x19
 495 004f 03       		.uleb128 0x3
 496 0050 0E       		.uleb128 0xe
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 18


 497 0051 3A       		.uleb128 0x3a
 498 0052 0B       		.uleb128 0xb
 499 0053 3B       		.uleb128 0x3b
 500 0054 0B       		.uleb128 0xb
 501 0055 27       		.uleb128 0x27
 502 0056 19       		.uleb128 0x19
 503 0057 11       		.uleb128 0x11
 504 0058 01       		.uleb128 0x1
 505 0059 12       		.uleb128 0x12
 506 005a 06       		.uleb128 0x6
 507 005b 40       		.uleb128 0x40
 508 005c 18       		.uleb128 0x18
 509 005d 9742     		.uleb128 0x2117
 510 005f 19       		.uleb128 0x19
 511 0060 01       		.uleb128 0x1
 512 0061 13       		.uleb128 0x13
 513 0062 00       		.byte	0
 514 0063 00       		.byte	0
 515 0064 08       		.uleb128 0x8
 516 0065 05       		.uleb128 0x5
 517 0066 00       		.byte	0
 518 0067 03       		.uleb128 0x3
 519 0068 0E       		.uleb128 0xe
 520 0069 3A       		.uleb128 0x3a
 521 006a 0B       		.uleb128 0xb
 522 006b 3B       		.uleb128 0x3b
 523 006c 0B       		.uleb128 0xb
 524 006d 49       		.uleb128 0x49
 525 006e 13       		.uleb128 0x13
 526 006f 02       		.uleb128 0x2
 527 0070 18       		.uleb128 0x18
 528 0071 00       		.byte	0
 529 0072 00       		.byte	0
 530 0073 09       		.uleb128 0x9
 531 0074 2E       		.uleb128 0x2e
 532 0075 01       		.byte	0x1
 533 0076 3F       		.uleb128 0x3f
 534 0077 19       		.uleb128 0x19
 535 0078 03       		.uleb128 0x3
 536 0079 0E       		.uleb128 0xe
 537 007a 3A       		.uleb128 0x3a
 538 007b 0B       		.uleb128 0xb
 539 007c 3B       		.uleb128 0x3b
 540 007d 05       		.uleb128 0x5
 541 007e 27       		.uleb128 0x27
 542 007f 19       		.uleb128 0x19
 543 0080 11       		.uleb128 0x11
 544 0081 01       		.uleb128 0x1
 545 0082 12       		.uleb128 0x12
 546 0083 06       		.uleb128 0x6
 547 0084 40       		.uleb128 0x40
 548 0085 18       		.uleb128 0x18
 549 0086 9742     		.uleb128 0x2117
 550 0088 19       		.uleb128 0x19
 551 0089 01       		.uleb128 0x1
 552 008a 13       		.uleb128 0x13
 553 008b 00       		.byte	0
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 19


 554 008c 00       		.byte	0
 555 008d 0A       		.uleb128 0xa
 556 008e 05       		.uleb128 0x5
 557 008f 00       		.byte	0
 558 0090 03       		.uleb128 0x3
 559 0091 0E       		.uleb128 0xe
 560 0092 3A       		.uleb128 0x3a
 561 0093 0B       		.uleb128 0xb
 562 0094 3B       		.uleb128 0x3b
 563 0095 05       		.uleb128 0x5
 564 0096 49       		.uleb128 0x49
 565 0097 13       		.uleb128 0x13
 566 0098 02       		.uleb128 0x2
 567 0099 17       		.uleb128 0x17
 568 009a 00       		.byte	0
 569 009b 00       		.byte	0
 570 009c 0B       		.uleb128 0xb
 571 009d 34       		.uleb128 0x34
 572 009e 00       		.byte	0
 573 009f 03       		.uleb128 0x3
 574 00a0 08       		.uleb128 0x8
 575 00a1 3A       		.uleb128 0x3a
 576 00a2 0B       		.uleb128 0xb
 577 00a3 3B       		.uleb128 0x3b
 578 00a4 05       		.uleb128 0x5
 579 00a5 49       		.uleb128 0x49
 580 00a6 13       		.uleb128 0x13
 581 00a7 02       		.uleb128 0x2
 582 00a8 17       		.uleb128 0x17
 583 00a9 00       		.byte	0
 584 00aa 00       		.byte	0
 585 00ab 0C       		.uleb128 0xc
 586 00ac 898201   		.uleb128 0x4109
 587 00af 00       		.byte	0
 588 00b0 11       		.uleb128 0x11
 589 00b1 01       		.uleb128 0x1
 590 00b2 31       		.uleb128 0x31
 591 00b3 13       		.uleb128 0x13
 592 00b4 00       		.byte	0
 593 00b5 00       		.byte	0
 594 00b6 0D       		.uleb128 0xd
 595 00b7 0F       		.uleb128 0xf
 596 00b8 00       		.byte	0
 597 00b9 0B       		.uleb128 0xb
 598 00ba 0B       		.uleb128 0xb
 599 00bb 49       		.uleb128 0x49
 600 00bc 13       		.uleb128 0x13
 601 00bd 00       		.byte	0
 602 00be 00       		.byte	0
 603 00bf 0E       		.uleb128 0xe
 604 00c0 26       		.uleb128 0x26
 605 00c1 00       		.byte	0
 606 00c2 49       		.uleb128 0x49
 607 00c3 13       		.uleb128 0x13
 608 00c4 00       		.byte	0
 609 00c5 00       		.byte	0
 610 00c6 0F       		.uleb128 0xf
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 20


 611 00c7 2E       		.uleb128 0x2e
 612 00c8 01       		.byte	0x1
 613 00c9 3F       		.uleb128 0x3f
 614 00ca 19       		.uleb128 0x19
 615 00cb 03       		.uleb128 0x3
 616 00cc 0E       		.uleb128 0xe
 617 00cd 3A       		.uleb128 0x3a
 618 00ce 0B       		.uleb128 0xb
 619 00cf 3B       		.uleb128 0x3b
 620 00d0 05       		.uleb128 0x5
 621 00d1 27       		.uleb128 0x27
 622 00d2 19       		.uleb128 0x19
 623 00d3 49       		.uleb128 0x49
 624 00d4 13       		.uleb128 0x13
 625 00d5 11       		.uleb128 0x11
 626 00d6 01       		.uleb128 0x1
 627 00d7 12       		.uleb128 0x12
 628 00d8 06       		.uleb128 0x6
 629 00d9 40       		.uleb128 0x40
 630 00da 18       		.uleb128 0x18
 631 00db 9742     		.uleb128 0x2117
 632 00dd 19       		.uleb128 0x19
 633 00de 01       		.uleb128 0x1
 634 00df 13       		.uleb128 0x13
 635 00e0 00       		.byte	0
 636 00e1 00       		.byte	0
 637 00e2 10       		.uleb128 0x10
 638 00e3 34       		.uleb128 0x34
 639 00e4 00       		.byte	0
 640 00e5 03       		.uleb128 0x3
 641 00e6 0E       		.uleb128 0xe
 642 00e7 3A       		.uleb128 0x3a
 643 00e8 0B       		.uleb128 0xb
 644 00e9 3B       		.uleb128 0x3b
 645 00ea 05       		.uleb128 0x5
 646 00eb 49       		.uleb128 0x49
 647 00ec 13       		.uleb128 0x13
 648 00ed 02       		.uleb128 0x2
 649 00ee 18       		.uleb128 0x18
 650 00ef 00       		.byte	0
 651 00f0 00       		.byte	0
 652 00f1 11       		.uleb128 0x11
 653 00f2 2E       		.uleb128 0x2e
 654 00f3 00       		.byte	0
 655 00f4 3F       		.uleb128 0x3f
 656 00f5 19       		.uleb128 0x19
 657 00f6 03       		.uleb128 0x3
 658 00f7 0E       		.uleb128 0xe
 659 00f8 3A       		.uleb128 0x3a
 660 00f9 0B       		.uleb128 0xb
 661 00fa 3B       		.uleb128 0x3b
 662 00fb 05       		.uleb128 0x5
 663 00fc 27       		.uleb128 0x27
 664 00fd 19       		.uleb128 0x19
 665 00fe 11       		.uleb128 0x11
 666 00ff 01       		.uleb128 0x1
 667 0100 12       		.uleb128 0x12
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 21


 668 0101 06       		.uleb128 0x6
 669 0102 40       		.uleb128 0x40
 670 0103 18       		.uleb128 0x18
 671 0104 9742     		.uleb128 0x2117
 672 0106 19       		.uleb128 0x19
 673 0107 00       		.byte	0
 674 0108 00       		.byte	0
 675 0109 12       		.uleb128 0x12
 676 010a 2E       		.uleb128 0x2e
 677 010b 01       		.byte	0x1
 678 010c 3F       		.uleb128 0x3f
 679 010d 19       		.uleb128 0x19
 680 010e 03       		.uleb128 0x3
 681 010f 0E       		.uleb128 0xe
 682 0110 3A       		.uleb128 0x3a
 683 0111 0B       		.uleb128 0xb
 684 0112 3B       		.uleb128 0x3b
 685 0113 05       		.uleb128 0x5
 686 0114 27       		.uleb128 0x27
 687 0115 19       		.uleb128 0x19
 688 0116 49       		.uleb128 0x49
 689 0117 13       		.uleb128 0x13
 690 0118 11       		.uleb128 0x11
 691 0119 01       		.uleb128 0x1
 692 011a 12       		.uleb128 0x12
 693 011b 06       		.uleb128 0x6
 694 011c 40       		.uleb128 0x40
 695 011d 18       		.uleb128 0x18
 696 011e 9742     		.uleb128 0x2117
 697 0120 19       		.uleb128 0x19
 698 0121 00       		.byte	0
 699 0122 00       		.byte	0
 700 0123 00       		.byte	0
 701              		.section	.debug_loc,"",%progbits
 702              	.Ldebug_loc0:
 703              	.LLST0:
 704 0000 00000000 		.4byte	.LVL1
 705 0004 0A000000 		.4byte	.LVL3
 706 0008 0100     		.2byte	0x1
 707 000a 50       		.byte	0x50
 708 000b 0A000000 		.4byte	.LVL3
 709 000f 16000000 		.4byte	.LVL8
 710 0013 0100     		.2byte	0x1
 711 0015 56       		.byte	0x56
 712 0016 16000000 		.4byte	.LVL8
 713 001a 18000000 		.4byte	.LFE1
 714 001e 0400     		.2byte	0x4
 715 0020 F3       		.byte	0xf3
 716 0021 01       		.uleb128 0x1
 717 0022 50       		.byte	0x50
 718 0023 9F       		.byte	0x9f
 719 0024 00000000 		.4byte	0
 720 0028 00000000 		.4byte	0
 721              	.LLST1:
 722 002c 00000000 		.4byte	.LVL1
 723 0030 0A000000 		.4byte	.LVL3
 724 0034 0100     		.2byte	0x1
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 22


 725 0036 51       		.byte	0x51
 726 0037 0A000000 		.4byte	.LVL3
 727 003b 16000000 		.4byte	.LVL7
 728 003f 0100     		.2byte	0x1
 729 0041 55       		.byte	0x55
 730 0042 16000000 		.4byte	.LVL7
 731 0046 18000000 		.4byte	.LFE1
 732 004a 0400     		.2byte	0x4
 733 004c F3       		.byte	0xf3
 734 004d 01       		.uleb128 0x1
 735 004e 51       		.byte	0x51
 736 004f 9F       		.byte	0x9f
 737 0050 00000000 		.4byte	0
 738 0054 00000000 		.4byte	0
 739              	.LLST2:
 740 0058 06000000 		.4byte	.LVL2
 741 005c 0A000000 		.4byte	.LVL3
 742 0060 0200     		.2byte	0x2
 743 0062 30       		.byte	0x30
 744 0063 9F       		.byte	0x9f
 745 0064 0A000000 		.4byte	.LVL3
 746 0068 16000000 		.4byte	.LVL6
 747 006c 0100     		.2byte	0x1
 748 006e 54       		.byte	0x54
 749 006f 00000000 		.4byte	0
 750 0073 00000000 		.4byte	0
 751              		.section	.debug_aranges,"",%progbits
 752 0000 44000000 		.4byte	0x44
 753 0004 0200     		.2byte	0x2
 754 0006 00000000 		.4byte	.Ldebug_info0
 755 000a 04       		.byte	0x4
 756 000b 00       		.byte	0
 757 000c 0000     		.2byte	0
 758 000e 0000     		.2byte	0
 759 0010 00000000 		.4byte	.LFB0
 760 0014 1C000000 		.4byte	.LFE0-.LFB0
 761 0018 00000000 		.4byte	.LFB1
 762 001c 18000000 		.4byte	.LFE1-.LFB1
 763 0020 00000000 		.4byte	.LFB2
 764 0024 10000000 		.4byte	.LFE2-.LFB2
 765 0028 00000000 		.4byte	.LFB3
 766 002c 20000000 		.4byte	.LFE3-.LFB3
 767 0030 00000000 		.4byte	.LFB4
 768 0034 10000000 		.4byte	.LFE4-.LFB4
 769 0038 00000000 		.4byte	.LFB5
 770 003c 10000000 		.4byte	.LFE5-.LFB5
 771 0040 00000000 		.4byte	0
 772 0044 00000000 		.4byte	0
 773              		.section	.debug_ranges,"",%progbits
 774              	.Ldebug_ranges0:
 775 0000 00000000 		.4byte	.LFB0
 776 0004 1C000000 		.4byte	.LFE0
 777 0008 00000000 		.4byte	.LFB1
 778 000c 18000000 		.4byte	.LFE1
 779 0010 00000000 		.4byte	.LFB2
 780 0014 10000000 		.4byte	.LFE2
 781 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 23


 782 001c 20000000 		.4byte	.LFE3
 783 0020 00000000 		.4byte	.LFB4
 784 0024 10000000 		.4byte	.LFE4
 785 0028 00000000 		.4byte	.LFB5
 786 002c 10000000 		.4byte	.LFE5
 787 0030 00000000 		.4byte	0
 788 0034 00000000 		.4byte	0
 789              		.section	.debug_line,"",%progbits
 790              	.Ldebug_line0:
 791 0000 F6000000 		.section	.debug_str,"MS",%progbits,1
 791      02006300 
 791      00000201 
 791      FB0E0D00 
 791      01010101 
 792              	.LASF14:
 793 0000 72656733 		.ascii	"reg32\000"
 793      3200
 794              	.LASF20:
 795 0006 636F756E 		.ascii	"count\000"
 795      7400
 796              	.LASF18:
 797 000c 74784461 		.ascii	"txData\000"
 797      746100
 798              	.LASF3:
 799 0013 73686F72 		.ascii	"short unsigned int\000"
 799      7420756E 
 799      7369676E 
 799      65642069 
 799      6E7400
 800              	.LASF8:
 801 0026 756E7369 		.ascii	"unsigned int\000"
 801      676E6564 
 801      20696E74 
 801      00
 802              	.LASF23:
 803 0033 55415254 		.ascii	"UART_SpiUartDisableIntRx\000"
 803      5F537069 
 803      55617274 
 803      44697361 
 803      626C6549 
 804              	.LASF11:
 805 004c 666C6F61 		.ascii	"float\000"
 805      7400
 806              	.LASF25:
 807 0052 55415254 		.ascii	"UART_SpiUartDisableIntTx\000"
 807      5F537069 
 807      55617274 
 807      44697361 
 807      626C6549 
 808              	.LASF21:
 809 006b 73697A65 		.ascii	"size\000"
 809      00
 810              	.LASF5:
 811 0070 6C6F6E67 		.ascii	"long unsigned int\000"
 811      20756E73 
 811      69676E65 
 811      6420696E 
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 24


 811      7400
 812              	.LASF9:
 813 0082 75696E74 		.ascii	"uint8\000"
 813      3800
 814              	.LASF19:
 815 0088 77724275 		.ascii	"wrBuf\000"
 815      6600
 816              	.LASF1:
 817 008e 756E7369 		.ascii	"unsigned char\000"
 817      676E6564 
 817      20636861 
 817      7200
 818              	.LASF12:
 819 009c 646F7562 		.ascii	"double\000"
 819      6C6500
 820              	.LASF10:
 821 00a3 75696E74 		.ascii	"uint32\000"
 821      333200
 822              	.LASF30:
 823 00aa 55415254 		.ascii	"UART_SpiUartClearTxBuffer\000"
 823      5F537069 
 823      55617274 
 823      436C6561 
 823      72547842 
 824              	.LASF17:
 825 00c4 55415254 		.ascii	"UART_SpiUartPutArray\000"
 825      5F537069 
 825      55617274 
 825      50757441 
 825      72726179 
 826              	.LASF26:
 827 00d9 696E7453 		.ascii	"intSourceMask\000"
 827      6F757263 
 827      654D6173 
 827      6B00
 828              	.LASF24:
 829 00e7 696E7453 		.ascii	"intSource\000"
 829      6F757263 
 829      6500
 830              	.LASF7:
 831 00f1 6C6F6E67 		.ascii	"long long unsigned int\000"
 831      206C6F6E 
 831      6720756E 
 831      7369676E 
 831      65642069 
 832              	.LASF27:
 833 0108 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 833      4320342E 
 833      382E3420 
 833      32303134 
 833      30353236 
 834 013b 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m0 -mthumb -g -O"
 834      20726576 
 834      6973696F 
 834      6E203231 
 834      31333538 
 835 016e 67202D66 		.ascii	"g -ffunction-sections\000"
ARM GAS  C:\Users\HASHIM~1\AppData\Local\Temp\cc9YOVWn.s 			page 25


 835      66756E63 
 835      74696F6E 
 835      2D736563 
 835      74696F6E 
 836              	.LASF15:
 837 0184 73697A65 		.ascii	"sizetype\000"
 837      74797065 
 837      00
 838              	.LASF6:
 839 018d 6C6F6E67 		.ascii	"long long int\000"
 839      206C6F6E 
 839      6720696E 
 839      7400
 840              	.LASF16:
 841 019b 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 841      5F537069 
 841      55617274 
 841      57726974 
 841      65547844 
 842              	.LASF22:
 843 01b3 55415254 		.ascii	"UART_SpiUartGetTxBufferSize\000"
 843      5F537069 
 843      55617274 
 843      47657454 
 843      78427566 
 844              	.LASF2:
 845 01cf 73686F72 		.ascii	"short int\000"
 845      7420696E 
 845      7400
 846              	.LASF29:
 847 01d9 443A5C50 		.ascii	"D:\\PSoC\\RotaCon\\RotaCon.cydsn\000"
 847      536F435C 
 847      526F7461 
 847      436F6E5C 
 847      526F7461 
 848              	.LASF28:
 849 01f7 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\UART_SPI_UART.c\000"
 849      6E657261 
 849      7465645F 
 849      536F7572 
 849      63655C50 
 850              	.LASF4:
 851 0220 6C6F6E67 		.ascii	"long int\000"
 851      20696E74 
 851      00
 852              	.LASF13:
 853 0229 63686172 		.ascii	"char\000"
 853      00
 854              	.LASF0:
 855 022e 7369676E 		.ascii	"signed char\000"
 855      65642063 
 855      68617200 
 856              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
